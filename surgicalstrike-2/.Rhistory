install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-2.1")
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-2.0"
exity
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-2.1")
a <- 'jai mata di'
print a
a <- 'jai mata di'
a
a <- 'jai mata di'
a <- 'jai mata di'
a <- 'jai mata di'
print(a)
pwd
getwd()
install.packages("lavaan",dependencies = TRUE)
library(lavaan)
?solve
library(foreign)
?read.spss
example.cor <- lower2full(c(1,2.0,0.3,34.6))
example.cor <- lav_matrix_lower2full(c(1,2.0,0.3,34.6))
example.cor
example.cor <- lav_matrix_lower2full(c(1,2.0,0.3,34.6))
library(lavaan)
library(foreign)
example.cor <- lav_matrix_lower2full(c(1,2.0,0.3,34.6))
example.cor <- lav_matrix_lower2full(c(1,2.0,0.3,3.6,0.6))
example.cor <- lav_matrix_lower2full(c(1,.84,.85,.86))
example.cor <- lower2full(c(1,.84,.85,.86))
?lav_matrix_lower2full
example.cor <- lower2full(c(1,.84,.85,.86),diagonal = TRUE)
example.cor <- lav_matrix_lower2full(c(1,.84,.85,.86),diagonal = TRUE)
example.cor <- lav_matrix_lower2full(c(1,.84,1,.85,1,.86),diagonal = TRUE)
example.cor
example.cor <- lav_matrix_lower2full(c(1,.84,1,.85,.86,1),diagonal = TRUE)
example.cor
rownames(example.cor) <- colnames(example.cor) <- c("var1","var2","var3")
example.cor
cov(example.cor)
data()
library("semPlot")
library("lavaan")
# read in file cfaex2dat.csv as a data frame
# NOTE: is same dataset from exercise #1
GW.data <- read.csv(file.choose(), header=TRUE)
GW.data
View(GW.data)
GW.model1 <- '
spatial =~ VISPERC + CUBES + LOZENGES
verb
GW.model1 <- '
spatial =~ VISPERC + CUBES + LOZENGES
verbal =~ PARAGRAP + SENTENCE + WORDMEAN
'
# fit the model; we set the scale by setting
# the variances of the exogenous latents to  one
# which is the typical choice with CFA
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
# look at the results
summary(fit.1, fit.measures = TRUE)
summary(fit.1, fit.measures = TRUE)
summary(fit.1, fit.measures = TRUE)
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
summary(fit.1, fit.measures = TRUE)
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
GW.model1 <- '
spatial =~ VISPERC + CUBES + LOZENGES
verbal =~ PARAGRAP + SENTENCE + WORDMEAN
'
# fit the model; we set the scale by setting
# the variances of the exogenous latents to  one
# which is the typical choice with CFA
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
GW.model1 <-'spatial =~ VISPERC + CUBES + LOZENGES
verbal =~ PARAGRAP + SENTENCE + WORDMEAN'
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
library("semPlot")
library("lavaan")
library("semPlot")
library("lavaan")
# read in file cfaex2dat.csv as a data frame
# NOTE: is same dataset from exercise #1
GW.data <- read.csv(file.choose(), header=TRUE)
GW.data <- read.csv(file.choose(), header=TRUE)
library("semPlot")
library("lavaan")
# read in file cfaex2dat.csv as a data frame
# NOTE: is same dataset from exercise #1
GW.data <- read.csv(file.choose(), header=TRUE)
library("semPlot")
library("lavaan")
# read in file cfaex2dat.csv as a data frame
# NOTE: is same dataset from exercise #1
GW.data <- read.csv(file.choose(), header=TRUE)
library("semPlot")
library("lavaan")
# read in file cfaex2dat.csv as a data frame
# NOTE: is same dataset from exercise #1
GW.data <- read.csv(file.choose(), header=TRUE)
# take a look
GW.data
# fit the model; we set the scale by setting
# the variances of the exogenous latents to  one
# which is the typical choice with CFA
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
GW.model1 <- '
spatial =~ VISPERC + CUBES + LOZENGES
verbal =~ PARAGRAP + SENTENCE + WORDMEAN
'
# fit the model; we set the scale by setting
# the variances of the exogenous latents to  one
# which is the typical choice with CFA
fit.1 <- cfa(GW.model1, data = GW.data, std.lv = TRUE)
# look at the results
summary(fit.1, fit.measures = TRUE)
?cfa
summary(fit_model_1,fitmeasures=TRUE)
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fitmeasures=TRUE)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fitmeasures=TRUE)
summary(fit_model_1,fit.measures=TRUE)
modindices(fit_model_1)
>runMI
?runMI
out <- runMI(fit_model_1,testdata,fun="lavaan",chi="lmrr",m=3)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
?runMI
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
install.packages("semTools",dependencies = TRUE)
install.packages("semTools", dependencies = TRUE)
install.packages("semTools",dependencies = TRUE)
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
inspect(out)
inspect(out,"fit_model_1")
inspect(out,"fit_modle_1")
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
inspect(out,"fit_model_1")
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
inspect(out,"fit_model_1")
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
inspect(out,"fit_model_1")
summary(out)
?inspect
lavInspect(out)
inspect(out,"fit")
inspect(out,"fit_model_1")
inspect(out,fit_model_1)
inspect(out,fit_model_1)
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
inspect(out,"fit_model_1")
inspect(out,what="free")
summary(out,fit.measures = TRUE)
library("semTools")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
summary(out,fit.measures = TRUE)
summary(out,fit.measures=TRUE)
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fit.measures=TRUE)
modindices(fit_model_1)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
summary(out,fit.measures=TRUE)
summary(out)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fit.measures=TRUE)
modindices(fit_model_1)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
summary(out)
fit_model_1 <- lavaan(model=model_1,data=testdata)
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- lavaan(model=model_1,data=testdata)
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fit.measures=TRUE)
modindices(fit_model_1)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan")
summary(out)
inspect(out,what="free")
summary(out,fitMeasures=TRUE)
summary(out,fit.Measures=TRUE)
summary(outE)
summary(out)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan",missing ="ML")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="lavaan",missing ="ML")
summary(out)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="cfa")
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="cfa")
summary(out)
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fit.measures=TRUE)
out <- runMI(fit_model_1,testdata,m=3,chi="lmrr",fun="cfa")
summary(out)
?compareFit
compareFit(out,fit_model_1)
out <- cfa.mi(fit_model_1,testdata,m=3,chi="lmrr",fun="cfa")
summary(out)
anova(out,fit_model_1)
compareFit(out,fit_model_1)
anova(out,fit_model_1)
out <- cfa.mi(fit_model_1,testdata,m=3,chi="lmrr")
summary(out)
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fit.measures=TRUE)
out <- cfa.mi(fit_model_1,testdata,m=3,chi="lmrr")
summary(out)
anova(out,fit_model_1)
out <- cfa.mi(model_1,testdata,m=3,chi="lmrr")
out <- runMI(model_1,testdata,m=3,chi="lmrr")
out <- cfa,mi(model_1,testdata,m=3)
out <- cfa.mi(model_1,testdata,m=3)
summary(out)
compareFit(out,fit_model_1)
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
summary(out)
anova(fit_model_2,fit_model_1)
compareFit(fit_model_2,fit_model_1)
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
summary(fit_model_2)
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fit.measures=TRUE)
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
summary(fit_model_2)
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
summary(fit_model_2,fit.measures=TRUE)
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
summary(fit_model_2)
fit_model_2 <- cfa.mi(model_1,testdata,m=3,chi="all")
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
summary(fit_model_2)
fit_model_2 <- cfa.mi(model_1,testdata,m=3,missing="ML")
summary(fit_model_2)
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
summary(fit_model_2)
fit_model_3 <- cfa.mi(model_1,testdata,m=3,missing ="ML")
summary(fit_model_3)
compareFit(fit_model_3,fit_model_2)
anova(fit_model_3,fit_model_2)
install.packages("rmarkdown")
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages(c("backports", "checkmate", "colorspace", "data.table", "fansi", "jsonlite", "knitr", "markdown", "OpenMx", "pillar", "psych", "readxl", "tibble", "tinytex"))
install.packages("OpenMx")
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
install.packages("data.table")
# load the lavaan and semplot packages
library("lavaan")
library("semPlot")
library("semTools")
#load the file
testdata <- read.csv("cfa_ex_miss.csv")
#check for the data
summary(testdata)
hist(testdata)
#Model-1  constraint on observed variables . Factor loading of first variable set to 1 which is
#default in CFA
model_1 <-'
spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
'
fit_model_1 <- cfa(model=model_1,data=testdata)
summary(fit_model_1,fit.measures=TRUE)
fit_model_2 <- cfa.mi(model_1,testdata,m=3)
ex.miss.dat<-read.csv(file.choose(),header=TRUE)
library(lavaan)
mod2 <-
'spatial =~ visperc + cubes + lozenges
verbal =~ paragrap + sentence + wordmean
visperc ~~ visperc
cubes ~~ cubes
lozenges ~~ lozenges
paragrap ~~ paragrap
sentence ~~ sentence
wordmean ~~ wordmean
spatial ~~ 1*spatial
verbal ~~ 1*verbal '
# Running the model
fit2 <- lavaan(mod2, data=ex.miss.dat)
# fit of model is pretty bad. Also, it only
# used 55 of the 73 total observations
summary(fit2, fit.measures=TRUE, standardized=TRUE)
View(fit_model_1)
install.packages("xgboost")
install.packages("tm", dependencies=TRUE)
install.packages("twitteR" ,dependencies =  TRUE)
install.packages("wordcloud")
install.packages("ROAuth" , dependencies = TRUE)
install.packages("syuzhet")
library(twitteR)
library("tm")
library("wordcloud")
library(syuzhet)
library(ggplot2)
library(dplyr)
testdata <- read.csv(file="tweets.csv")
setwd("E:/MyDrive-2/DataScience/surgicalstrike-2")
testdata <- read.csv(file="tweets.csv")
View(testdata)
#convert all text to lower case
testdata_text <- tolower(testdata$text)
